// <auto-generated />
using ConsultaIbge.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsultaIbge.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20231016162220_v2-AlterandoNomeTabelaIbgeParaLocalidade")]
    partial class v2AlterandoNomeTabelaIbgeParaLocalidade
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("ConsultaIbge.Domain.Entities.Locality", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(7)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.HasKey("Id");

                    b.HasIndex("City")
                        .HasDatabaseName("IX_IBGE_City");

                    b.HasIndex("Id")
                        .HasDatabaseName("IX_IBGE_Id");

                    b.HasIndex("State")
                        .HasDatabaseName("IX_IBGE_State");

                    b.ToTable("localidade", (string)null);
                });

            modelBuilder.Entity("ConsultaIbge.Domain.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("char(7)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
